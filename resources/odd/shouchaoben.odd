<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>shouchaoben</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref></p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl/></encodingDesc><revisionDesc>
            <change when="2021-03-15+01:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="shouchaoben" source="teipublisher.odd"> <elementSpec ident="title" mode="change"><model behaviour="heading">
            <outputRendition xml:space="preserve">
            fong-size: 20px; text-align: center;
            </outputRendition>
        </model><model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="5"/>
        </model><modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' â€” '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence><model predicate="not(@level) and parent::bibl" behaviour="inline"/><modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence><model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec><elementSpec ident="persName" mode="add"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            color: #008B8B;
            </outputRendition>
        </model></elementSpec><elementSpec ident="placeName" mode="add"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            color: blue;
            </outputRendition>
        </model></elementSpec><elementSpec ident="orgName" mode="add"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            color: green;
            </outputRendition>
        </model></elementSpec><elementSpec ident="pb" mode="change"><modelSequence predicate="parent::body">
            <model behaviour="block">
                <param name="content" value="root(.)//sourceDesc/msDesc/msContents/summary"/>
            </model>
            <model behaviour="break">
                <param name="type" value="'page'"/>
                <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
                <outputRendition xml:space="preserve">
                display: block; margin-left: 20pt; margin-bottom: 20pt; color: grey; float: right;
                </outputRendition>
                <outputRendition xml:space="preserve" scope="before">
                content: '[Page ';
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: ']';
                </outputRendition>
            </model>
            <model behaviour="inline">
                <param name="content" value="root(.)//facsimile/graphic"/>
            </model>
        </modelSequence><model behaviour="break" useSourceRendition="true">
            <param name="type" value="'page'"/>
            <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
            <outputRendition xml:space="preserve">
            display: block; margin-left: 4pt; color: grey; float: right;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: '[Page ';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: ']';
            </outputRendition>
        </model></elementSpec><elementSpec ident="sourceDesc" mode="add"/><elementSpec ident="choice" mode="change"><model output="plain" predicate="sic and corr" behaviour="inline">
            <param name="content" value="corr[1]"/>
        </model><model output="plain" predicate="abbr and expan" behaviour="inline">
            <param name="content" value="expan[1]"/>
        </model><model output="plain" predicate="orig and reg" behaviour="inline">
            <param name="content" value="reg[1]"/>
        </model><model predicate="sic and corr" behaviour="alternate">
            <param name="default" value="corr[1]"/>
            <param name="alternate" value="sic[1]"/>
        </model><model predicate="abbr and expan" behaviour="alternate">
            <param name="default" value="expan[1]"/>
            <param name="alternate" value="abbr[1]"/>
        </model><model output="web" predicate="orig and reg" behaviour="alternate">
            <param name="default" value="reg[1]"/>
            <param name="alternate" value="orig[1]"/>
        </model></elementSpec><elementSpec ident="editorialDecl" mode="add"/><elementSpec ident="summary" mode="add"/><elementSpec ident="date" mode="change"><model output="print" predicate="text()" behaviour="inline"/><model output="print" predicate="@when and not(text())" behaviour="inline">
            <param name="content" value="@when"/>
        </model><model output="web" predicate="@when" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="@when"/>
        </model><model predicate="text()" behaviour="inline"/></elementSpec><elementSpec ident="graphics" mode="add"><model predicate="parent::facsimile" behaviour="inline">
            <param name="url" value="@url"/>
            <pb:template xmlns="" xml:space="preserve"><pb-facs-link facs="[[url]]" emit="transcription"/></pb:template>
        </model></elementSpec></schemaSpec>
        </body>
    </text></TEI>